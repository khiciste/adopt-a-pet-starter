{"version":3,"sources":["api/petfinder/index.js","components/hero/index.js","components/pet/index.js","pages/home/index.js","pages/search/index.js","pages/detail/index.js","pages/petDetailsNotFound/index.js","assets/logo.svg","components/search/index.js","components/navigation/index.js","App.js","reportWebVitals.js","index.js","mocks/handlers.js","mocks/browser.js"],"names":["getPets","a","type","query","searchParams","URLSearchParams","requestUrl","toString","fetch","method","response","json","getPetDetails","id","getPetTypes","Hero","image","displayText","className","style","backgroundImage","backgroundBlendMode","backgroundSize","backgroundColor","getHeroTitle","Pet","animal","href","toLowerCase","src","photos","medium","alt","name","breeds","primary","colors","gender","HomePage","useState","data","setData","useParams","console","log","useEffect","petsData","getPetsData","length","map","to","SearchPage","search","useLocation","queryParams","useMemo","pets","setPets","petNameToFind","get","pet","PetDetailsPage","loading","setLoading","error","setError","full","description","PetDetailsNotFound","history","useHistory","onClick","goBack","Search","searchInputRef","useRef","onSubmit","e","preventDefault","searchQuery","current","value","push","ref","Navigation","petTypes","setPetTypes","types","getPetTypesData","Logo","activeClassName","exact","_links","self","split","pop","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","require","worker","start","ReactDOM","render","StrictMode","document","getElementById","handlers","rest","_req","res","ctx","status","req","url","animals","filter","contact","address","state","includes","params","details","setupWorker"],"mappings":"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","file":"static/js/main.33fdb734.chunk.js","sourcesContent":["export const getPets = async (type = '', query = '') => {\n  const searchParams = new URLSearchParams({ type, query });\n  const requestUrl = `/animals?${searchParams.toString()}`;\n\n  const response = await fetch(requestUrl, {\n    method: 'GET'\n  });\n\n  const json = await response.json();\n\n  return json;\n};\n\nexport const getPetDetails = async (id) => {\n  const requestUrl = `/animals/${id}`;\n  const response = await fetch(requestUrl, {\n    method: 'GET'\n  });\n\n  const json = await response.json();\n\n  return json;\n};\n\nexport const getPetTypes = async () => {\n  const requestUrl = `/types`;\n  const response = await fetch(requestUrl, {\n    method: 'GET'\n  });\n\n  const json = await response.json();\n\n  return json;\n};\n","import React from 'react';\n\nconst Hero = ({ image, displayText }) => {\n  const type = ''\n\n  return (\n    <div\n      className=\"hero-container\"\n      style={{\n        backgroundImage: `linear-gradient(black, black), url(\"${\n          image || 'pets-hero.png'\n        }\")\n          `,\n        backgroundBlendMode: 'saturation',\n        backgroundSize: 'cover',\n        backgroundColor: '#0000008f'\n      }}\n    >\n      <h2>{displayText || getHeroTitle(type)}</h2>\n    </div>\n  );\n};\n\nexport default Hero;\n\nconst getHeroTitle = (type) => {\n  switch (type) {\n    case 'dog':\n      return 'Dogs';\n    case 'cat':\n      return 'Cats';\n    case 'rabbit':\n      return 'Rabbits';\n    case 'bird':\n      return 'Birds';\n    default:\n      return 'Find your perfect pet';\n  }\n};\n","import React from 'react';\n\nconst Pet = ({ animal }) => {\n  return (\n    <a\n      key={animal.id}\n      href={`/${animal.type.toLowerCase()}/${animal.id}`}\n      className=\"pet\"\n    >\n      <article>\n        <div className=\"pet-image-container\">\n          {\n            <img\n              className=\"pet-image\"\n              src={\n                animal.photos[0]?.medium || 'https://i.imgur.com/aEcJUFK.png'\n              }\n              alt=\"\"\n            />\n          }\n        </div>\n        <h3>{animal.name}</h3>\n        <p>Breed: {animal.breeds.primary}</p>\n        <p>Color: {animal.colors.primary}</p>\n        <p>Gender: {animal.gender}</p>\n      </article>\n    </a>\n  );\n};\n\nexport default Pet;\n","import React, { useEffect, useState } from 'react';\nimport { getPets } from '../../api/petfinder';\nimport Hero from '../../components/hero';\nimport Pet from '../../components/pet';\nimport { useParams, Link } from 'react-router-dom';\n\nconst HomePage = () => {\n  const [data, setData] = useState(null);\n  const { type } = useParams();\n  console.log(type);\n\n  useEffect(() => {\n    async function getPetsData() {\n      const petsData = await getPets(type);\n      setData(petsData);\n    }\n\n    getPetsData();\n  }, [type]);\n\n  if (!data) {\n    return <h2>Loading...</h2>;\n  }\n\n  return (\n    <div className=\"page\">\n      <Hero />\n      <h3>\n        <span className=\"pet-type-label\">{type ? `${type}s` : 'Pets'}</span>{' '}\n        available for adoption near you\n      </h3>\n\n      {data.length ? (\n        <div className=\"grid\">\n          {data.map((animal) => (\n            <Link // Change me to a Link!\n              key={animal.id}\n              to={`/${animal.type.toLowerCase()}/${animal.id}`}\n              className=\"pet\"\n            >\n              <article>\n                <div className=\"pet-image-container\">\n                  {\n                    <img\n                      className=\"pet-image\"\n                      src={\n                        animal.photos[0]?.medium ||\n                        '/missing-animal.png'\n                      }\n                      alt=\"\"\n                    />\n                  }\n                </div>\n                <h3>{animal.name}</h3>\n                <p>Breed: {animal.breeds.primary}</p>\n                <p>Color: {animal.colors.primary}</p>\n                <p>Gender: {animal.gender}</p>\n              </article>\n            </Link> // Don't forget to change me!\n          ))}\n        </div>\n      ) : (\n        <p className=\"prompt\">No {type}s available for adoption now.</p>\n      )}\n    </div>\n  );\n};\n\nexport default HomePage;\n","import React, { useState, useEffect, useMemo } from 'react';\nimport Hero from '../../components/hero';\nimport { getPets } from '../../api/petfinder';\nimport Pet from '../../components/pet';\nimport { useLocation } from 'react-router-dom';\n\n// import useLocation here\n\nconst SearchPage = () => {\n\n  // Get the search value from useLocation() here\n  const { search } = useLocation();\n\n  const queryParams = useMemo(() => { \n    return new URLSearchParams(search);\n  }, [search]);\n\n  const [pets, setPets] = useState([]);\n\n  useEffect(() => {\n    async function getPetsData() {\n      const petNameToFind = queryParams.get('name');\n      const petsData = await getPets('', petNameToFind);\n\n      setPets(petsData);\n    }\n\n    getPetsData();\n  }, [queryParams]);\n\n  return (\n    <div className=\"page\">\n      <Hero displayText={`Results for ${queryParams.get('name')}`} />\n\n      <h3>Pets available for adoption near you</h3>\n\n      <main>\n        <div className=\"grid\">\n          {pets.map((pet) => (\n            <Pet animal={pet} key={pet.id} />\n          ))}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default SearchPage;\n","import React, { useEffect, useState } from 'react';\nimport { getPetDetails } from '../../api/petfinder';\nimport Hero from '../../components/hero';\nimport { useParams, Redirect } from 'react-router-dom';\n\nconst PetDetailsPage = () => {\n  const [data, setData] = useState();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const { id } = useParams();\n\n  useEffect(() => {\n    async function getPetsData() {\n      try {\n        const petsData = await getPetDetails(id);\n        setData(petsData);\n        setError(false);\n      } catch (e) {\n        setError(true);\n      }\n      setLoading(false);\n    }\n\n    getPetsData();\n  }, [id]);\n\n  return (\n    <div>\n      {loading ? (\n        <h3>Loading...</h3>\n      ) : error ? (\n        <div>\n          <Redirect to='/pet-details-not-found' />\n        </div>\n      ) : (\n        <main>\n          <Hero\n            image={data.photos[1]?.full || 'https://i.imgur.com/aEcJUFK.png'}\n            displayText={`Meet ${data.name}`}\n          />\n          <div className=\"pet-detail\">\n            <div className=\"pet-image-container\">\n              <img\n                className=\"pet-image\"\n                src={\n                  data.photos[0]?.medium || 'https://i.imgur.com/aEcJUFK.png'\n                }\n                alt=\"\"\n              />\n            </div>\n            <div>\n              <h1>{data.name}</h1>\n              <h3>Breed: {data.breeds.primary}</h3>\n              <p>Color: {data.colors.primary || 'Unknown'}</p>\n              <p>Gender: {data.gender}</p>\n              <h3>Description</h3>\n              <p>{data.description}</p>\n            </div>\n          </div>\n        </main>\n      )}\n    </div>\n  );\n};\n\nexport default PetDetailsPage;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst PetDetailsNotFound = () => {\n\n  const history = useHistory();\n\n  const goBack = () => {\n    history.goBack();\n  }\n  \n  return (\n    <main className=\"page container center-text\">\n      <h3>404: Who let the dogs out?</h3>\n      <p>Sorry, but the details for this pet have not been uploaded by the shelter yet. Check back later!</p>\n      <img\n        src=\"https://i.chzbgr.com/full/8362031616/h9EB970C5/weve-lost-our-corgination\"\n        alt=\"\"\n      />\n      <div className=\"actions-container\">\n        <button className=\"button\" onClick={goBack}>\n          Go Back\n        </button>\n      </div>\n    </main>\n  );\n};\n\nexport default PetDetailsNotFound;\n","export default __webpack_public_path__ + \"static/media/logo.c7c56d31.svg\";","import React, { useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst Search = () => {\n\n  const history = useHistory();\n\n  const searchInputRef = useRef();\n\n  const onSearchHandler = (e) => {\n    e.preventDefault();\n\n    const searchQuery = new URLSearchParams({\n      name: searchInputRef.current.value\n    }).toString();\n\n    // imperatively redirect with history.push()\n    history.push('/search?' + searchQuery);\n  };\n\n  return (\n    <form onSubmit={onSearchHandler} className=\"search-form\">\n      <input type=\"text\" className=\"search\" ref={searchInputRef} />\n      <button type=\"submit\" className=\"search-button\">\n        🔎\n      </button>\n    </form>\n  );\n};\n\nexport default Search;\n","import React, { useEffect, useState } from 'react';\nimport { getPetTypes } from '../../api/petfinder';\nimport Logo from '../../assets/logo.svg';\nimport Search from '../search';\nimport { NavLink } from 'react-router-dom';\n\nconst Navigation = () => {\n  const [petTypes, setPetTypes] = useState([]);\n\n  useEffect(() => {\n    async function getPetTypesData() {\n      const { types } = await getPetTypes();\n      setPetTypes(types);\n    }\n\n    getPetTypesData();\n  }, []);\n\n  return (\n    <nav>\n      <div className=\"nav-logo\">\n        <img src={Logo} alt=\"Petlover\" />\n        <Search />\n      </div>\n      <ul className=\"nav-links\">\n        <li key=\"all\">\n          {/* This link should have an activeClassName and exact prop */}\n          <NavLink\n            to=\"/\"\n            className=\"nav-link\"\n            activeClassName=\"nav-link-active\"\n            exact\n          >\n            All Pets\n          </NavLink>\n        </li>\n        {petTypes\n          ? petTypes.map((type) => (\n              <li key={type.name}>\n                {/* These links should have an activeClassName prop */}\n                <NavLink\n                  to={`/${type._links.self.href.split('/').pop()}`}\n                  key={type.name}\n                  className=\"nav-link\"\n                  activeClassName=\"nav-link-active\"\n                >\n                  {type.name}s\n                </NavLink>{' '}\n              </li>\n            ))\n          : 'Loading...'}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import HomePage from './pages/home';\nimport SearchPage from './pages/search';\nimport PetDetailsPage from './pages/detail';\nimport PetDetailsNotFound from './pages/petDetailsNotFound';\nimport Navigation from './components/navigation';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nfunction App() {\n  return (\n    \n    <Router>\n      <Navigation />\n      <Switch>\n        <Route path='/:type/:id'>\n          <PetDetailsPage />\n        </Route>\n        <Route path='/search'>\n          <SearchPage />\n        </Route>\n        <Route path='/pet-details-not-found'>\n          <PetDetailsNotFound />\n        </Route>\n        <Route path='/:type?'>\n          <HomePage />\n        </Route>\n      </Switch>\n    </Router>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst { worker } = require('./mocks/browser');\nworker.start();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { rest } from 'msw';\nimport types from './data/types.json';\nimport animals from './data/animals.json';\nimport details from './data/details.json';\n\nexport const handlers = [\n  rest.get('/types', (_req, res, ctx) => {\n    return res(ctx.status(200), ctx.json(types));\n  }),\n  rest.get('/animals', (req, res, ctx) => {\n    const type = req.url.searchParams.get('type');\n    const query = req.url.searchParams.get('query');\n    let response = animals.animals;\n\n    if (type !== '') {\n      response = response.filter(\n        (animal) => animal.type.toLowerCase() === type.toLowerCase()\n      );\n    }\n    if (query !== '') {\n      response = response.filter(\n        (animal) =>\n          animal.contact.address.state\n            .toLowerCase()\n            .includes(query.toLowerCase()) ||\n          animal.name.toLowerCase().includes(query.toLowerCase())\n      );\n    }\n    return res(ctx.status(200), ctx.json(response));\n  }),\n  rest.get('/animals/:id', (req, res, ctx) => {\n    const { id } = req.params;\n    let response = details[id];\n\n    if (!response) {\n      return res(ctx.status(404));\n    }\n\n    return res(ctx.status(200), ctx.json(response));\n  })\n];\n","import { setupWorker } from 'msw';\nimport { handlers } from './handlers';\n\nexport const worker = setupWorker(...handlers);\n"],"sourceRoot":""}